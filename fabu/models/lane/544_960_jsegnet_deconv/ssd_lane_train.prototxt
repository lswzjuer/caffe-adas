name: "ssd_lane_v3"

layer {
    name: "data"
    type: "Data"
    top: "data"
    data_param{
        source: "/private/liusongwei/adas/lane_dataset/lmdb/train_960_544_120000_image"
        backend: LMDB
        batch_size: 16
    }
    transform_param {
      scale: 1.0
      mean_value: 128.0
      mean_value: 128.0
      mean_value: 128.0
    }
    include: { phase: TRAIN }
}

layer {
    name: "label"
    type: "Data"
    top: "label"
    data_param{
        source: "/private/liusongwei/adas/lane_dataset/lmdb/train_960_544_120000_label"
        backend: LMDB
        batch_size: 16
    }
    include: { phase: TRAIN }
}

layer {
    name: "data"
    type: "Data"
    top: "data"
    data_param{
        source: "/private/liusongwei/adas/lane_dataset/lmdb/val_960_544_4082_image"
        backend: LMDB
        batch_size: 8
    }
    transform_param {
      scale: 1.0
      mean_value: 128.0
      mean_value: 128.0
      mean_value: 128.0
    }
    include: { phase: TEST }
}

layer {
    name: "label"
    type: "Data"
    top: "label"
    data_param{
        source: "/private/liusongwei/adas/lane_dataset/lmdb/val_960_544_4082_label"
        backend: LMDB
        batch_size: 8
    }
    include: { phase: TEST }
}

layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    bias_term: true
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}

layer {
  name: "conv1a/bn"
  type: "BatchNorm"
  bottom: "conv1a"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv1a/scale"
  type: "Scale"
  bottom: "conv1a"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "conv1a/relu"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}

layer {
  name: "conv1b"
  type: "Convolution"
  bottom: "conv1a"
  top: "conv1b"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1b/bn"
  type: "BatchNorm"
  bottom: "conv1b"
  top: "conv1b"
  param {
    lr_mult: 0.0
    decay_mult: 0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv1b/scale"
  type: "Scale"
  bottom: "conv1b"
  top: "conv1b"
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "conv1b/relu"
  type: "ReLU"
  bottom: "conv1b"
  top: "conv1b"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1b"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res2a_branch2a"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res2a_branch2a/scale"
  type: "Scale"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2a/relu"
  type: "ReLU"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
}
layer {
  name: "res2a_branch2b"
  type: "Convolution"
  bottom: "res2a_branch2a"
  top: "res2a_branch2b"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res2a_branch2b/scale"
  type: "Scale"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2b/relu"
  type: "ReLU"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res2a_branch2b"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}



# change for lane
layer {
  name: "lane_res3a_branch2a"
  type: "Convolution"
  bottom: "pool2"
  top: "lane_res3a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}

layer {
  name: "lane_res3a_branch2a/bn"
  type: "BatchNorm"
  bottom: "lane_res3a_branch2a"
  top: "lane_res3a_branch2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}

layer {
  name: "lane_res3a_branch2a/scale"
  type: "Scale"
  bottom: "lane_res3a_branch2a"
  top: "lane_res3a_branch2a"
  param {
    lr_mult: 0.1
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.0
  }
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "lane_res3a_branch2a/relu"
  type: "ReLU"
  bottom: "lane_res3a_branch2a"
  top: "lane_res3a_branch2a"
}


layer {
  name: "lane_res3a_branch2b"
  type: "Convolution"
  bottom: "lane_res3a_branch2a"
  top: "lane_res3a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}

layer {
  name: "lane_res3a_branch2b/bn"
  type: "BatchNorm"
  bottom: "lane_res3a_branch2b"
  top: "lane_res3a_branch2b"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}

layer {
  name: "lane_res3a_branch2b/scale"
  type: "Scale"
  bottom: "lane_res3a_branch2b"
  top: "lane_res3a_branch2b"
  param {
    lr_mult: 0.1
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.0
  }
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "lane_res3a_branch2b/relu"
  type: "ReLU"
  bottom: "lane_res3a_branch2b"
  top: "lane_res3a_branch2b"
}


layer {
  name: "lane_pool_3"
  type: "Pooling"
  bottom: "lane_res3a_branch2b"
  top: "lane_pool_3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "lane_res4a_branch2a"
  type: "Convolution"
  bottom: "lane_pool_3"
  top: "lane_res4a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "lane_res4a_branch2a/bn"
  type: "BatchNorm"
  bottom: "lane_res4a_branch2a"
  top: "lane_res4a_branch2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}
layer {
  name: "lane_res4a_branch2a/scale"
  type: "Scale"
  bottom: "lane_res4a_branch2a"
  top: "lane_res4a_branch2a"
  param {
    lr_mult: 0.1
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.0
  }
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "lane_res4a_branch2a/relu"
  type: "ReLU"
  bottom: "lane_res4a_branch2a"
  top: "lane_res4a_branch2a"
}

layer {
  name: "lane_res4a_branch2b"
  type: "Convolution"
  bottom: "lane_res4a_branch2a"
  top: "lane_res4a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "lane_res4a_branch2b/bn"
  type: "BatchNorm"
  bottom: "lane_res4a_branch2b"
  top: "lane_res4a_branch2b"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}
layer {
  name: "lane_res4a_branch2b/scale"
  type: "Scale"
  bottom: "lane_res4a_branch2b"
  top: "lane_res4a_branch2b"
  param {
    lr_mult: 0.1
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.0
  }
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}

layer {
  name: "lane_res4a_branch2b/relu"
  type: "ReLU"
  bottom: "lane_res4a_branch2b"
  top: "lane_res4a_branch2b"
}

layer {
  name: "lane_pool_4"
  type: "Pooling"
  bottom: "lane_res4a_branch2b"
  top: "lane_pool_4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "lane_res5a_branch2a"
  type: "Convolution"
  bottom: "lane_pool_4"
  top: "lane_res5a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "lane_res5a_branch2a/bn"
  type: "BatchNorm"
  bottom: "lane_res5a_branch2a"
  top: "lane_res5a_branch2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}
layer {
  name: "lane_res5a_branch2a/scale"
  type: "Scale"
  bottom: "lane_res5a_branch2a"
  top: "lane_res5a_branch2a"
  param {
    lr_mult: 0.1
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.0
  }
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "lane_res5a_branch2a/relu"
  type: "ReLU"
  bottom: "lane_res5a_branch2a"
  top: "lane_res5a_branch2a"
}

layer {
  name: "lane_res5a_branch2b"
  type: "Convolution"
  bottom: "lane_res5a_branch2a"
  top: "lane_res5a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}

layer {
  name: "lane_res5a_branch2b/bn"
  type: "BatchNorm"
  bottom: "lane_res5a_branch2b"
  top: "lane_res5a_branch2b"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}

layer {
  name: "lane_res5a_branch2b/scale"
  type: "Scale"
  bottom: "lane_res5a_branch2b"
  top: "lane_res5a_branch2b"
  param {
    lr_mult: 0.1
    decay_mult: 0.0
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.0
  }
  scale_param {
    filler {
      value: 1
    }
    bias_term: true
    bias_filler {
      value: 0
    }
  }
}
layer {
  name: "lane_res5a_branch2b/relu"
  type: "ReLU"
  bottom: "lane_res5a_branch2b"
  top: "lane_res5a_branch2b"
}

layer {
  name: "res5a_change_channel"
  type: "Convolution"
  bottom: "lane_res5a_branch2b"
  top: "res5a_change_channel"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 6
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "constant"
      value: 0
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}

layer {
    name: "res5a_deconv"
    type: "Deconvolution"
    bottom: "res5a_change_channel" 
    top: "res5a_deconv"
    convolution_param {
        num_output: 6
        bias_term: False
        pad: 0             
        kernel_size: 2  
        group: 6
        stride: 2           
        weight_filler {
            type: "bilinear"
        }
        dilation: 1
    }
    param {
          lr_mult: 0 
          decay_mult: 0 
          }
}

layer {
  name: "lane_pool_3_change_channel"
  type: "Convolution"
  bottom: "lane_pool_3"
  top: "lane_pool_3_change_channel"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 6
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "constant"
      value: 0
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}

layer {
  name: "fuse_pool3"
  type: "Eltwise"
  bottom: "res5a_deconv"
  bottom: "lane_pool_3_change_channel"
  top: "fuse_pool3"
}


layer {
    name: "fuse_pool3_deconv"
    type: "Deconvolution"
    bottom: "fuse_pool3" 
    top: "fuse_pool3_deconv"
    convolution_param {
        num_output: 6
        bias_term: False
        pad: 0             
        kernel_size: 2  
        group: 6
        stride: 2           
        weight_filler {
            type: "bilinear"
        }
        dilation: 1
    }
    param {
          lr_mult: 0 
          decay_mult: 0 
          }
}

layer {
  name: "pool2_change_channel"
  type: "Convolution"
  bottom: "pool2"
  top: "pool2_change_channel"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 6
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "constant"
      value: 0
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}

layer {
  name: "fuse_pool2"
  type: "Eltwise"
  bottom: "fuse_pool3_deconv"
  bottom: "pool2_change_channel"
  top: "fuse_pool2"
}

layer {
    name: "output_deconv8"
    type: "Deconvolution"
    bottom: "fuse_pool2" 
    top: "output_deconv8"
    convolution_param {
        num_output: 6
        bias_term: False
        pad: 0             
        kernel_size: 8 
        group: 6
        stride: 8         
        weight_filler {
            type: "bilinear"
        }
        dilation: 1
    }
    param {
          lr_mult: 0 
          decay_mult: 0 
          }
}

layer {
  name: "accuracy/top1"
  type: "Accuracy"
  bottom: "output_deconv8"
  bottom: "label"
  top: "accuracy/top1"
  include {
    phase: TEST
  }
}
layer {
  name: "accuracy/top5"
  type: "Accuracy"
  bottom: "output_deconv8"
  bottom: "label"
  top: "accuracy/top5"
  include {
    phase: TEST
  }
  accuracy_param {
    top_k: 5
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "output_deconv8"
  bottom: "label"
  top: "loss"
}

